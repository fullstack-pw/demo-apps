name: Multi-App CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "apps/**"
  push:
    branches:
      - main
    paths:
      - "apps/**"

jobs:
  determine-app:
    runs-on: self-hosted
    outputs:
      app_paths: ${{ steps.find-apps.outputs.app_paths }}
      app_names: ${{ steps.find-apps.outputs.app_names }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Find changed apps
        id: find-apps
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            # For push events, get changed files from the commit
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
          else
            # For PR events, get changed files in the PR
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
          fi

          # Extract app paths and names from changed files
          APPS_PATHS=()
          APPS_NAMES=()

          echo "Changed files:"
          echo "$CHANGED_FILES"

          for FILE in $CHANGED_FILES; do
            # Extract the app name from the path (apps/app-name/...)
            if [[ $FILE == apps/* ]]; then
              APP_PATH=$(echo $FILE | cut -d'/' -f1-2)
              APP_NAME=$(echo $FILE | cut -d'/' -f2)
              
              # Check if this app path is already in our list
              if [[ ! " ${APPS_PATHS[@]} " =~ " ${APP_PATH} " ]]; then
                APPS_PATHS+=("$APP_PATH")
                APPS_NAMES+=("$APP_NAME")
              fi
            fi
          done

          # Format as JSON arrays for GitHub Actions
          PATHS_JSON=$(printf '%s\n' "${APPS_PATHS[@]}" | jq -R . | jq -s . | jq -c .)
          NAMES_JSON=$(printf '%s\n' "${APPS_NAMES[@]}" | jq -R . | jq -s . | jq -c .)

          echo "App paths: $PATHS_JSON"
          echo "App names: $NAMES_JSON"

          echo "app_paths=$PATHS_JSON" >> $GITHUB_OUTPUT
          echo "app_names=$NAMES_JSON" >> $GITHUB_OUTPUT

  go-tests:
    needs: determine-app
    if: needs.determine-app.outputs.app_paths != '[]'
    strategy:
      matrix:
        app_path: ${{ fromJson(needs.determine-app.outputs.app_paths) }}
        # app_name: ${{ fromJson(needs.determine-app.outputs.app_names) }}
    name: GO Tests for ${{ matrix.app_name }}
    uses: fullstack-pw/pipelines/.github/workflows/go-tests.yml@main
    with:
      go-dir: ./${{ matrix.app_path }}

  docker-build-and-push:
    needs: [determine-app, go-tests]
    if: needs.determine-app.outputs.app_paths != '[]'
    strategy:
      matrix:
        app_path: ${{ fromJson(needs.determine-app.outputs.app_paths) }}
        # app_name: ${{ fromJson(needs.determine-app.outputs.app_names) }}
    name: Build and Push ${{ matrix.app_name }}
    uses: fullstack-pw/pipelines/.github/workflows/build-and-push.yml@main
    with:
      app-context: "./${{ matrix.app_path }}"
      app-name: "${{ matrix.app_name }}"

  dev-deploy:
    needs: [determine-app, docker-build-and-push]
    if: needs.determine-app.outputs.app_paths != '[]'
    strategy:
      matrix:
        app_path: ${{ fromJson(needs.determine-app.outputs.app_paths) }}
        # app_name: ${{ fromJson(needs.determine-app.outputs.app_names) }}
    name: DEV deploy ${{ matrix.app_name }}
    uses: fullstack-pw/pipelines/.github/workflows/deploy-kustomize.yml@main
    with:
      kustomize-dir: "./${{ matrix.app_path }}/kustomize/overlays/dev"
      context: "dev"
      app-name: ${{ matrix.app_name }}

  stg-deploy:
    needs: [determine-app, dev-deploy]
    if: needs.determine-app.outputs.app_paths != '[]'
    strategy:
      matrix:
        app_path: ${{ fromJson(needs.determine-app.outputs.app_paths) }}
        # app_name: ${{ fromJson(needs.determine-app.outputs.app_names) }}
    name: STG deploy ${{ matrix.app_name }}
    uses: fullstack-pw/pipelines/.github/workflows/deploy-kustomize.yml@main
    with:
      kustomize-dir: "./${{ matrix.app_path }}/kustomize/overlays/stg"
      context: "stg"
      app-name: ${{ matrix.app_name }}

  prod-deploy:
    needs: [determine-app, stg-deploy]
    if: needs.determine-app.outputs.app_paths != '[]' && github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        app_path: ${{ fromJson(needs.determine-app.outputs.app_paths) }}
        # app_name: ${{ fromJson(needs.determine-app.outputs.app_names) }}
    name: PROD deploy ${{ matrix.app_name }}
    uses: fullstack-pw/pipelines/.github/workflows/deploy-kustomize.yml@main
    with:
      kustomize-dir: "./${{ matrix.app_path }}/kustomize/overlays/prod"
      context: "prod"
      app-name: ${{ matrix.app_name }}
